{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\real2\\\\Desktop\\\\PFA1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for stored user on initial load and listen for storage changes\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const storedUser = localStorage.getItem('currentUser');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n          console.log('User authenticated from localStorage:', user.username);\n        } else {\n          console.log('No user found in localStorage');\n          setCurrentUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        // Clear potentially corrupted auth data\n        localStorage.removeItem('currentUser');\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Initial check\n    checkAuth();\n\n    // Listen for storage events (in case another tab changes auth state)\n    const handleStorageChange = e => {\n      if (e.key === 'currentUser') {\n        checkAuth();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Login function\n  const login = userData => {\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('currentUser', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('currentUser');\n\n    // Also clear cart data for security\n    localStorage.removeItem('cart');\n\n    // Dispatch storage event to ensure all components update\n    window.dispatchEvent(new Event('storage'));\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return currentUser && currentUser.username === 'admin';\n  };\n\n  // Auth context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xEP/j9fZUjXdRhiZPTN8EwQKttc=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuth","storedUser","localStorage","getItem","user","JSON","parse","console","log","username","error","removeItem","handleStorageChange","e","key","window","addEventListener","removeEventListener","login","userData","setItem","stringify","logout","dispatchEvent","Event","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/real2/Desktop/PFA1/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the authentication context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for stored user on initial load and listen for storage changes\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const storedUser = localStorage.getItem('currentUser');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n          console.log('User authenticated from localStorage:', user.username);\n        } else {\n          console.log('No user found in localStorage');\n          setCurrentUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        // Clear potentially corrupted auth data\n        localStorage.removeItem('currentUser');\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Initial check\n    checkAuth();\n    \n    // Listen for storage events (in case another tab changes auth state)\n    const handleStorageChange = (e) => {\n      if (e.key === 'currentUser') {\n        checkAuth();\n      }\n    };\n    \n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Login function\n  const login = (userData) => {\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('currentUser', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('currentUser');\n    \n    // Also clear cart data for security\n    localStorage.removeItem('cart');\n    \n    // Dispatch storage event to ensure all components update\n    window.dispatchEvent(new Event('storage'));\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return currentUser && currentUser.username === 'admin';\n  };\n\n  // Auth context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}