{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\real2\\\\Desktop\\\\PFA1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for stored user on initial load\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const storedUser = localStorage.getItem('currentUser');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        // Clear potentially corrupted auth data\n        localStorage.removeItem('currentUser');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = userData => {\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('currentUser', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('currentUser');\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return currentUser && currentUser.username === 'admin';\n  };\n\n  // Auth context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xEP/j9fZUjXdRhiZPTN8EwQKttc=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuth","storedUser","localStorage","getItem","user","JSON","parse","error","console","removeItem","login","userData","setItem","stringify","logout","isAdmin","username","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/real2/Desktop/PFA1/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the authentication context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for stored user on initial load\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const storedUser = localStorage.getItem('currentUser');\n        if (storedUser) {\n          const user = JSON.parse(storedUser);\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        // Clear potentially corrupted auth data\n        localStorage.removeItem('currentUser');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = (userData) => {\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('currentUser', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('currentUser');\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return currentUser && currentUser.username === 'admin';\n  };\n\n  // Auth context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGA,CAAA,KAAM;MACtB,IAAI;QACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACtD,IAAIF,UAAU,EAAE;UACd,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;UACnCN,cAAc,CAACS,IAAI,CAAC;UACpBP,kBAAkB,CAAC,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD;QACAL,YAAY,CAACO,UAAU,CAAC,aAAa,CAAC;MACxC,CAAC,SAAS;QACRV,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,KAAK,GAAIC,QAAQ,IAAK;IAC1BhB,cAAc,CAACgB,QAAQ,CAAC;IACxBd,kBAAkB,CAAC,IAAI,CAAC;IACxBK,YAAY,CAACU,OAAO,CAAC,aAAa,EAAEP,IAAI,CAACQ,SAAS,CAACF,QAAQ,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBnB,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAAC,KAAK,CAAC;IACzBK,YAAY,CAACO,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;;EAED;EACA,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAOrB,WAAW,IAAIA,WAAW,CAACsB,QAAQ,KAAK,OAAO;EACxD,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG;IACZvB,WAAW;IACXE,eAAe;IACfE,SAAS;IACTY,KAAK;IACLI,MAAM;IACNC;EACF,CAAC;EAED,oBACE5B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,GAAA,CA7DWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA+DzB,eAAeH,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}